{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.6"},"colab":{"name":"Corona Virus - predições","provenance":[{"file_id":"1S9MaW_jFxowTNfdWW1rJhomV8P0VG_Lz","timestamp":1594005013207}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"znWpPo2KLPB4","colab_type":"text"},"source":["Esse notebook é um complemento do meu outro trabalho sobre o coronavirus! Então não estarei entrando em maiores detalhes.\n","\n","É também um notebook teste para eu aplicar alguns conhecimentos, então vários processos de modelagem e de explicações eu poderei estar pulando, com o tempo podendo estar melhorando\n","\n","link do meu outro notebook:\n","\n","https://github.com/LeopoldoZanellato/python/blob/master/covid-19-nos-estados-e-cidades-do-brasil.ipynb\n","\n","mais explicações sobre o SARIMAX, pode ser encontrado em meu outro notebook:\n","\n","https://github.com/LeopoldoZanellato/python/blob/master/SARIMAX%20Airpassengers.ipynb\n","\n","\n","Primeiramente, estarei utilizando um dataset que vai até a data de 28/06/2020, onde tentarei farei os treinos, e logo após isso farei a importação de outro dataset com os dados até a data de hoje... Como por enquanto são apenas testes e treinamentos, não estarei entrando em detalhes das parametrizações"]},{"cell_type":"code","metadata":{"id":"HJ2UYn3BDRUD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":247},"executionInfo":{"status":"ok","timestamp":1594008474128,"user_tz":180,"elapsed":3284,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"13e3b42c-ea4d-4b04-9ec7-28abb6258f7a"},"source":["!pip install pmdarima"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pmdarima in /usr/local/lib/python3.6/dist-packages (1.6.1)\n","Requirement already satisfied: statsmodels>=0.11 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (0.11.1)\n","Requirement already satisfied: Cython<0.29.18,>=0.29 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (0.29.17)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (1.18.5)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (1.24.3)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (0.15.1)\n","Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (1.0.5)\n","Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (0.22.2.post1)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.6/dist-packages (from pmdarima) (1.4.1)\n","Requirement already satisfied: patsy>=0.5 in /usr/local/lib/python3.6/dist-packages (from statsmodels>=0.11->pmdarima) (0.5.1)\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.19->pmdarima) (2.8.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.19->pmdarima) (2018.9)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from patsy>=0.5->statsmodels>=0.11->pmdarima) (1.12.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LEPr5DoZCzb5","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008495283,"user_tz":180,"elapsed":1008,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import warnings\n","from statsmodels.tools.eval_measures import rmse, mse\n","from statsmodels.tsa.statespace.sarimax import SARIMAX\n","from statsmodels.tsa.seasonal import seasonal_decompose\n","from statsmodels.graphics.tsaplots import plot_acf,plot_pacf\n","from statsmodels.tsa.statespace.tools import diff\n","from pmdarima import auto_arima\n","from statsmodels.tsa.stattools import adfuller\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","%matplotlib inline"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"2NKpzbYgC62l","colab_type":"code","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":111},"executionInfo":{"status":"ok","timestamp":1594005114778,"user_tz":180,"elapsed":23484,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"55f65bf3-f398-4e77-f5b7-f7355eaf96bd"},"source":["from google.colab import files\n","files.upload()"],"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-b9147a56-08cd-4518-986c-9a2acbcdde48\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-b9147a56-08cd-4518-986c-9a2acbcdde48\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving brazil_covid19_macro.csv to brazil_covid19_macro.csv\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["{'brazil_covid19_macro.csv': b'date,country,week,cases,deaths,recovered,monitoring\\r\\n2020-02-25,Brasil,9,0,0,,\\r\\n2020-02-26,Brasil,9,1,0,,\\r\\n2020-02-27,Brasil,9,1,0,,\\r\\n2020-02-28,Brasil,9,1,0,,\\r\\n2020-02-29,Brasil,9,2,0,,\\r\\n2020-03-01,Brasil,10,2,0,,\\r\\n2020-03-02,Brasil,10,2,0,,\\r\\n2020-03-03,Brasil,10,2,0,,\\r\\n2020-03-04,Brasil,10,3,0,,\\r\\n2020-03-05,Brasil,10,7,0,,\\r\\n2020-03-06,Brasil,10,13,0,,\\r\\n2020-03-07,Brasil,10,19,0,,\\r\\n2020-03-08,Brasil,11,25,0,,\\r\\n2020-03-09,Brasil,11,25,0,,\\r\\n2020-03-10,Brasil,11,34,0,,\\r\\n2020-03-11,Brasil,11,52,0,,\\r\\n2020-03-12,Brasil,11,77,0,,\\r\\n2020-03-13,Brasil,11,98,0,,\\r\\n2020-03-14,Brasil,11,121,0,,\\r\\n2020-03-15,Brasil,12,200,0,,\\r\\n2020-03-16,Brasil,12,234,0,,\\r\\n2020-03-17,Brasil,12,291,1,,\\r\\n2020-03-18,Brasil,12,428,4,,\\r\\n2020-03-19,Brasil,12,621,6,,\\r\\n2020-03-20,Brasil,12,904,11,,\\r\\n2020-03-21,Brasil,12,1128,18,,\\r\\n2020-03-22,Brasil,13,1546,25,,\\r\\n2020-03-23,Brasil,13,1891,34,,\\r\\n2020-03-24,Brasil,13,2201,46,,\\r\\n2020-03-25,Brasil,13,2433,57,,\\r\\n2020-03-26,Brasil,13,2915,77,,\\r\\n2020-03-27,Brasil,13,3417,92,,\\r\\n2020-03-28,Brasil,13,3903,114,,\\r\\n2020-03-29,Brasil,14,4256,136,,\\r\\n2020-03-30,Brasil,14,4579,159,,\\r\\n2020-03-31,Brasil,14,5717,201,,\\r\\n2020-04-01,Brasil,14,6834,241,,\\r\\n2020-04-02,Brasil,14,7910,299,,\\r\\n2020-04-03,Brasil,14,9056,359,,\\r\\n2020-04-04,Brasil,14,10278,432,,\\r\\n2020-04-05,Brasil,15,11130,486,,\\r\\n2020-04-06,Brasil,15,12056,553,,\\r\\n2020-04-07,Brasil,15,13717,667,,\\r\\n2020-04-08,Brasil,15,15927,800,,\\r\\n2020-04-09,Brasil,15,17857,941,,\\r\\n2020-04-10,Brasil,15,19638,1056,,\\r\\n2020-04-11,Brasil,15,20727,1124,,\\r\\n2020-04-12,Brasil,16,22169,1223,,\\r\\n2020-04-13,Brasil,16,23430,1328,,\\r\\n2020-04-14,Brasil,16,25262,1532,,\\r\\n2020-04-15,Brasil,16,28320,1736,,\\r\\n2020-04-16,Brasil,16,30425,1924,,\\r\\n2020-04-17,Brasil,16,33682,2141,,\\r\\n2020-04-18,Brasil,16,36599,2347,,\\r\\n2020-04-19,Brasil,17,38654,2462,22130.0,14062.0\\r\\n2020-04-20,Brasil,17,40581,2575,22991.0,15015.0\\r\\n2020-04-21,Brasil,17,43079,2741,24325.0,16013.0\\r\\n2020-04-22,Brasil,17,45757,2906,25318.0,17533.0\\r\\n2020-04-23,Brasil,17,49492,3313,26573.0,19606.0\\r\\n2020-04-24,Brasil,17,52995,3670,27655.0,21670.0\\r\\n2020-04-25,Brasil,17,58509,4016,29160.0,25333.0\\r\\n2020-04-26,Brasil,18,61888,4205,30152.0,27531.0\\r\\n2020-04-27,Brasil,18,66501,4543,31142.0,30816.0\\r\\n2020-04-28,Brasil,18,71886,5017,32544.0,34325.0\\r\\n2020-04-29,Brasil,18,78162,5466,34132.0,38564.0\\r\\n2020-04-30,Brasil,18,85380,5901,35935.0,43544.0\\r\\n2020-05-01,Brasil,18,91299,6329,38039.0,47221.0\\r\\n2020-05-02,Brasil,18,96396,6724,40937.0,48872.0\\r\\n2020-05-03,Brasil,19,101147,7025,42991.0,51131.0\\r\\n2020-05-04,Brasil,19,107780,7321,45186.0,55273.0\\r\\n2020-05-05,Brasil,19,114715,7921,48221.0,58573.0\\r\\n2020-05-06,Brasil,19,125218,8535,51370.0,65312.0\\r\\n2020-05-07,Brasil,19,135106,9146,55350.0,70610.0\\r\\n2020-05-08,Brasil,19,145328,9895,59297.0,76134.0\\r\\n2020-05-09,Brasil,19,155939,10627,61685.0,83627.0\\r\\n2020-05-10,Brasil,20,162699,11123,64957.0,86619.0\\r\\n2020-05-11,Brasil,20,168331,11519,67384.0,89429.0\\r\\n2020-05-12,Brasil,20,177589,12400,72597.0,92593.0\\r\\n2020-05-13,Brasil,20,188974,13149,78424.0,97402.0\\r\\n2020-05-14,Brasil,20,202918,13993,79479.0,109446.0\\r\\n2020-05-15,Brasil,20,218223,14817,84970.0,118436.0\\r\\n2020-05-16,Brasil,20,233142,15633,89672.0,127837.0\\r\\n2020-05-17,Brasil,21,241080,16118,94122.0,130840.0\\r\\n2020-05-18,Brasil,21,254220,16792,100459.0,136969.0\\r\\n2020-05-19,Brasil,21,271628,17971,106794.0,146863.0\\r\\n2020-05-20,Brasil,21,291579,18859,116683.0,156037.0\\r\\n2020-05-21,Brasil,21,310087,20047,125960.0,164080.0\\r\\n2020-05-22,Brasil,21,330890,21046,135430.0,174412.0\\r\\n2020-05-23,Brasil,21,347398,22013,142587.0,182798.0\\r\\n2020-05-24,Brasil,22,363211,22666,149911.0,190634.0\\r\\n2020-05-25,Brasil,22,374898,23473,153833.0,197592.0\\r\\n2020-05-26,Brasil,22,391222,24512,158593.0,208117.0\\r\\n2020-05-27,Brasil,22,411821,25598,166647.0,219576.0\\r\\n2020-05-28,Brasil,22,438238,26754,177604.0,233880.0\\r\\n2020-05-29,Brasil,22,465166,27878,189476.0,247812.0\\r\\n2020-05-30,Brasil,22,498440,28834,200892.0,268714.0\\r\\n2020-05-31,Brasil,23,514200,29314,206555.0,278331.0\\r\\n2020-06-01,Brasil,23,526447,29937,211080.0,285430.0\\r\\n2020-06-02,Brasil,23,555383,31199,223638.0,300546.0\\r\\n2020-06-03,Brasil,23,584016,32548,238617.0,312851.0\\r\\n2020-06-04,Brasil,23,614941,34021,254963.0,325957.0\\r\\n2020-06-05,Brasil,23,645771,35026,266940.0,343805.0\\r\\n2020-06-06,Brasil,23,672846,35930,277149.0,359767.0\\r\\n2020-06-07,Brasil,24,691758,36455,283952.0,371351.0\\r\\n2020-06-08,Brasil,24,707412,37134,290040.0,380238.0\\r\\n2020-06-09,Brasil,24,739503,38406,311064.0,390033.0\\r\\n2020-06-10,Brasil,24,772416,39680,325395.0,407341.0\\r\\n2020-06-11,Brasil,24,802828,40919,345595.0,416314.0\\r\\n2020-06-12,Brasil,24,828810,41828,365063.0,421919.0\\r\\n2020-06-13,Brasil,24,850514,42720,379245.0,428549.0\\r\\n2020-06-14,Brasil,25,867624,43332,388492.0,435800.0\\r\\n2020-06-15,Brasil,25,888271,43959,412252.0,432060.0\\r\\n2020-06-16,Brasil,25,923189,45241,441729.0,436219.0\\r\\n2020-06-17,Brasil,25,955377,46510,463474.0,445393.0\\r\\n2020-06-18,Brasil,25,978142,47748,482102.0,448292.0\\r\\n2020-06-19,Brasil,25,1032913,48954,507200.0,476759.0\\r\\n2020-06-20,Brasil,25,1067579,49976,520734.0,496869.0\\r\\n2020-06-21,Brasil,26,1085038,50617,549386.0,485035.0\\r\\n2020-06-22,Brasil,26,1106470,51271,571649.0,483550.0\\r\\n2020-06-23,Brasil,26,1145906,52645,613345.0,479916.0\\r\\n2020-06-24,Brasil,26,1188631,53830,649908.0,484893.0\\r\\n2020-06-25,Brasil,26,1228114,54971,673729.0,499414.0\\r\\n2020-06-26,Brasil,26,1274974,55961,697526.0,521487.0\\r\\n2020-06-27,Brasil,26,1313667,57070,715905.0,540692.0\\r\\n2020-06-28,Brasil,27,1344143,57622,733848.0,552673.0\\r\\n'}"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"VExG2k5BCzb-","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008498133,"user_tz":180,"elapsed":881,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["df_brasil = pd.read_csv(\"brazil_covid19_macro.csv\")"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"b7jZDDKJCzcC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":406},"executionInfo":{"status":"ok","timestamp":1594008498605,"user_tz":180,"elapsed":950,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"c5712bd7-9a6a-4783-c076-6e878d134d7f"},"source":["df_brasil"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>country</th>\n","      <th>week</th>\n","      <th>cases</th>\n","      <th>deaths</th>\n","      <th>recovered</th>\n","      <th>monitoring</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-02-25</td>\n","      <td>Brasil</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-02-26</td>\n","      <td>Brasil</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-02-27</td>\n","      <td>Brasil</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-02-28</td>\n","      <td>Brasil</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-02-29</td>\n","      <td>Brasil</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>120</th>\n","      <td>2020-06-24</td>\n","      <td>Brasil</td>\n","      <td>26</td>\n","      <td>1188631</td>\n","      <td>53830</td>\n","      <td>649908.0</td>\n","      <td>484893.0</td>\n","    </tr>\n","    <tr>\n","      <th>121</th>\n","      <td>2020-06-25</td>\n","      <td>Brasil</td>\n","      <td>26</td>\n","      <td>1228114</td>\n","      <td>54971</td>\n","      <td>673729.0</td>\n","      <td>499414.0</td>\n","    </tr>\n","    <tr>\n","      <th>122</th>\n","      <td>2020-06-26</td>\n","      <td>Brasil</td>\n","      <td>26</td>\n","      <td>1274974</td>\n","      <td>55961</td>\n","      <td>697526.0</td>\n","      <td>521487.0</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>2020-06-27</td>\n","      <td>Brasil</td>\n","      <td>26</td>\n","      <td>1313667</td>\n","      <td>57070</td>\n","      <td>715905.0</td>\n","      <td>540692.0</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>2020-06-28</td>\n","      <td>Brasil</td>\n","      <td>27</td>\n","      <td>1344143</td>\n","      <td>57622</td>\n","      <td>733848.0</td>\n","      <td>552673.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>125 rows × 7 columns</p>\n","</div>"],"text/plain":["           date country  week    cases  deaths  recovered  monitoring\n","0    2020-02-25  Brasil     9        0       0        NaN         NaN\n","1    2020-02-26  Brasil     9        1       0        NaN         NaN\n","2    2020-02-27  Brasil     9        1       0        NaN         NaN\n","3    2020-02-28  Brasil     9        1       0        NaN         NaN\n","4    2020-02-29  Brasil     9        2       0        NaN         NaN\n","..          ...     ...   ...      ...     ...        ...         ...\n","120  2020-06-24  Brasil    26  1188631   53830   649908.0    484893.0\n","121  2020-06-25  Brasil    26  1228114   54971   673729.0    499414.0\n","122  2020-06-26  Brasil    26  1274974   55961   697526.0    521487.0\n","123  2020-06-27  Brasil    26  1313667   57070   715905.0    540692.0\n","124  2020-06-28  Brasil    27  1344143   57622   733848.0    552673.0\n","\n","[125 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"P55AEN80CzcH","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008502020,"user_tz":180,"elapsed":936,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["brasil = df_brasil[['date', 'deaths']].groupby('date').sum().reset_index()"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"s4cSUwIwCzcK","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008502020,"user_tz":180,"elapsed":560,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["brasil = brasil[brasil['deaths'] >0]"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wq5zgIp8CzcO","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008502433,"user_tz":180,"elapsed":444,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["brasil['date'] = pd.to_datetime(brasil['date'])"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"8il1fbmcCzcT","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008503174,"user_tz":180,"elapsed":792,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["brasil.set_index('date', inplace=True)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"34ikffrYCzcX","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008503420,"user_tz":180,"elapsed":564,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["brasil.index.freq = \"D\""],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"gxbTUJLSCzca","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":311},"executionInfo":{"status":"ok","timestamp":1594008504329,"user_tz":180,"elapsed":997,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"e4b443bb-bf7a-4dbb-f8c9-d5f3d2a58b38"},"source":["brasil.plot()"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fba7d22e2b0>"]},"metadata":{"tags":[]},"execution_count":10},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"uUe1Jf0nCzce","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594008506949,"user_tz":180,"elapsed":678,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"3b472725-fb3b-4eed-cd2e-0d966432d6c2"},"source":["len(brasil.index)"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["104"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"cJAER76OCzch","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008507680,"user_tz":180,"elapsed":371,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["train_set = brasil[:90]\n","test_set = brasil[90:]"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"XBjQPXoOD0xp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":227},"executionInfo":{"status":"ok","timestamp":1594008521024,"user_tz":180,"elapsed":561,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"f91b0605-ebc6-49aa-bc40-ff2a5cdb4c1f"},"source":["train_set.tail()"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>deaths</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-06-10</th>\n","      <td>39680</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-11</th>\n","      <td>40919</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-12</th>\n","      <td>41828</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-13</th>\n","      <td>42720</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-14</th>\n","      <td>43332</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            deaths\n","date              \n","2020-06-10   39680\n","2020-06-11   40919\n","2020-06-12   41828\n","2020-06-13   42720\n","2020-06-14   43332"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"7FO-Ln-lD00v","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":852},"executionInfo":{"status":"ok","timestamp":1594008570754,"user_tz":180,"elapsed":45078,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"8a65a950-cec9-4528-d527-c139d4ec1923"},"source":["sarima = auto_arima(brasil['deaths'],start_p=0, start_q=0,\n","           seasonal=True,trace=True, m=7)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["Performing stepwise search to minimize aic\n","Fit ARIMA(0,1,0)x(1,1,1,7) [intercept=True]; AIC=1204.234, BIC=1214.491, Time=0.528 seconds\n","Fit ARIMA(0,1,0)x(0,1,0,7) [intercept=True]; AIC=1202.494, BIC=1207.622, Time=0.017 seconds\n","Fit ARIMA(1,1,0)x(1,1,0,7) [intercept=True]; AIC=1181.905, BIC=1192.163, Time=0.378 seconds\n","Fit ARIMA(0,1,1)x(0,1,1,7) [intercept=True]; AIC=1189.856, BIC=1200.113, Time=0.412 seconds\n","Fit ARIMA(0,1,0)x(0,1,0,7) [intercept=False]; AIC=1228.579, BIC=1231.143, Time=0.016 seconds\n","Fit ARIMA(1,1,0)x(0,1,0,7) [intercept=True]; AIC=1185.071, BIC=1192.764, Time=0.040 seconds\n","Fit ARIMA(1,1,0)x(2,1,0,7) [intercept=True]; AIC=1182.186, BIC=1195.008, Time=1.060 seconds\n","Fit ARIMA(1,1,0)x(1,1,1,7) [intercept=True]; AIC=1183.003, BIC=1195.824, Time=0.546 seconds\n","Fit ARIMA(1,1,0)x(0,1,1,7) [intercept=True]; AIC=1181.023, BIC=1191.280, Time=0.385 seconds\n","Fit ARIMA(1,1,0)x(0,1,2,7) [intercept=True]; AIC=1182.987, BIC=1195.808, Time=0.905 seconds\n","Fit ARIMA(1,1,0)x(1,1,2,7) [intercept=True]; AIC=1184.531, BIC=1199.917, Time=1.355 seconds\n","Fit ARIMA(0,1,0)x(0,1,1,7) [intercept=True]; AIC=1203.745, BIC=1211.438, Time=0.154 seconds\n","Fit ARIMA(2,1,0)x(0,1,1,7) [intercept=True]; AIC=1181.640, BIC=1194.462, Time=0.506 seconds\n","Fit ARIMA(1,1,1)x(0,1,1,7) [intercept=True]; AIC=1180.826, BIC=1193.647, Time=0.737 seconds\n","Fit ARIMA(1,1,1)x(0,1,0,7) [intercept=True]; AIC=1186.422, BIC=1196.679, Time=0.274 seconds\n","Fit ARIMA(1,1,1)x(1,1,1,7) [intercept=True]; AIC=1182.466, BIC=1197.852, Time=0.994 seconds\n","Fit ARIMA(1,1,1)x(0,1,2,7) [intercept=True]; AIC=1182.303, BIC=1197.689, Time=1.486 seconds\n","Fit ARIMA(1,1,1)x(1,1,0,7) [intercept=True]; AIC=1180.970, BIC=1193.792, Time=0.719 seconds\n","Fit ARIMA(1,1,1)x(1,1,2,7) [intercept=True]; AIC=1184.813, BIC=1202.764, Time=1.887 seconds\n","Near non-invertible roots for order (1, 1, 1)(1, 1, 2, 7); setting score to inf (at least one inverse root too close to the border of the unit circle: 1.000)\n","Fit ARIMA(2,1,1)x(0,1,1,7) [intercept=True]; AIC=1181.689, BIC=1197.075, Time=0.875 seconds\n","Fit ARIMA(1,1,2)x(0,1,1,7) [intercept=True]; AIC=1178.667, BIC=1194.053, Time=1.109 seconds\n","Fit ARIMA(1,1,2)x(0,1,0,7) [intercept=True]; AIC=1187.122, BIC=1199.944, Time=0.433 seconds\n","Fit ARIMA(1,1,2)x(1,1,1,7) [intercept=True]; AIC=1181.231, BIC=1199.181, Time=1.242 seconds\n","Fit ARIMA(1,1,2)x(0,1,2,7) [intercept=True]; AIC=1180.484, BIC=1198.435, Time=2.171 seconds\n","Fit ARIMA(1,1,2)x(1,1,0,7) [intercept=True]; AIC=1179.654, BIC=1195.040, Time=0.900 seconds\n","Fit ARIMA(1,1,2)x(1,1,2,7) [intercept=True]; AIC=1182.666, BIC=1203.181, Time=2.522 seconds\n","Near non-invertible roots for order (1, 1, 2)(1, 1, 2, 7); setting score to inf (at least one inverse root too close to the border of the unit circle: 1.000)\n","Fit ARIMA(0,1,2)x(0,1,1,7) [intercept=True]; AIC=1183.132, BIC=1195.954, Time=0.612 seconds\n","Fit ARIMA(2,1,2)x(0,1,1,7) [intercept=True]; AIC=1183.578, BIC=1201.528, Time=1.139 seconds\n","Fit ARIMA(1,1,3)x(0,1,1,7) [intercept=True]; AIC=1179.550, BIC=1197.501, Time=1.404 seconds\n","Fit ARIMA(0,1,3)x(0,1,1,7) [intercept=True]; AIC=1184.905, BIC=1200.291, Time=0.702 seconds\n","Fit ARIMA(2,1,3)x(0,1,1,7) [intercept=True]; AIC=1178.067, BIC=1198.582, Time=1.496 seconds\n","Fit ARIMA(2,1,3)x(0,1,0,7) [intercept=True]; AIC=1185.017, BIC=1202.968, Time=0.709 seconds\n","Fit ARIMA(2,1,3)x(1,1,1,7) [intercept=True]; AIC=1180.059, BIC=1203.138, Time=1.678 seconds\n","Fit ARIMA(2,1,3)x(0,1,2,7) [intercept=True]; AIC=1180.068, BIC=1203.147, Time=2.528 seconds\n","Fit ARIMA(2,1,3)x(1,1,0,7) [intercept=True]; AIC=1179.231, BIC=1199.746, Time=1.239 seconds\n","Fit ARIMA(2,1,3)x(1,1,2,7) [intercept=True]; AIC=1182.068, BIC=1207.711, Time=2.913 seconds\n","Near non-invertible roots for order (2, 1, 3)(1, 1, 2, 7); setting score to inf (at least one inverse root too close to the border of the unit circle: 1.000)\n","Fit ARIMA(3,1,3)x(0,1,1,7) [intercept=True]; AIC=1178.519, BIC=1201.598, Time=1.735 seconds\n","Near non-invertible roots for order (3, 1, 3)(0, 1, 1, 7); setting score to inf (at least one inverse root too close to the border of the unit circle: 1.000)\n","Fit ARIMA(2,1,4)x(0,1,1,7) [intercept=True]; AIC=1179.386, BIC=1202.465, Time=1.734 seconds\n","Fit ARIMA(1,1,4)x(0,1,1,7) [intercept=True]; AIC=1178.814, BIC=1199.328, Time=1.580 seconds\n","Fit ARIMA(3,1,2)x(0,1,1,7) [intercept=True]; AIC=1182.612, BIC=1203.126, Time=1.295 seconds\n","Fit ARIMA(3,1,4)x(0,1,1,7) [intercept=True]; AIC=1185.665, BIC=1211.308, Time=1.880 seconds\n","Total fit time: 44.378 seconds\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GEIDBOKgD02-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"status":"ok","timestamp":1594008575435,"user_tz":180,"elapsed":684,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"f2af8a41-90a7-42c0-b8eb-ed3cc8bd9d3b"},"source":["sarima"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ARIMA(maxiter=50, method='lbfgs', order=(2, 1, 3), out_of_sample_size=0,\n","      scoring='mse', scoring_args=None, seasonal_order=(0, 1, 1, 7),\n","      start_params=None, suppress_warnings=False, trend=None,\n","      with_intercept=True)"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"Ue4jJe7eMuA4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":458},"executionInfo":{"status":"ok","timestamp":1594008576457,"user_tz":180,"elapsed":537,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"44017723-c605-456e-cf28-1f602244293a"},"source":["sarima.summary()"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/html":["<table class=\"simpletable\">\n","<caption>SARIMAX Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>                  <td>y</td>                <th>  No. Observations:  </th>    <td>104</td>  \n","</tr>\n","<tr>\n","  <th>Model:</th>           <td>SARIMAX(2, 1, 3)x(0, 1, [1], 7)</td> <th>  Log Likelihood     </th> <td>-581.034</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>                   <td>Mon, 06 Jul 2020</td>         <th>  AIC                </th> <td>1178.067</td>\n","</tr>\n","<tr>\n","  <th>Time:</th>                       <td>04:09:34</td>             <th>  BIC                </th> <td>1198.582</td>\n","</tr>\n","<tr>\n","  <th>Sample:</th>                         <td>0</td>                <th>  HQIC               </th> <td>1186.360</td>\n","</tr>\n","<tr>\n","  <th></th>                             <td> - 104</td>              <th>                     </th>     <td> </td>   \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>               <td>opg</td>               <th>                     </th>     <td> </td>   \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>intercept</th> <td>    4.5636</td> <td>   10.880</td> <td>    0.419</td> <td> 0.675</td> <td>  -16.760</td> <td>   25.887</td>\n","</tr>\n","<tr>\n","  <th>ar.L1</th>     <td>    0.1502</td> <td>    0.198</td> <td>    0.759</td> <td> 0.448</td> <td>   -0.238</td> <td>    0.538</td>\n","</tr>\n","<tr>\n","  <th>ar.L2</th>     <td>    0.7730</td> <td>    0.156</td> <td>    4.945</td> <td> 0.000</td> <td>    0.467</td> <td>    1.079</td>\n","</tr>\n","<tr>\n","  <th>ma.L1</th>     <td>    0.3258</td> <td>    0.221</td> <td>    1.474</td> <td> 0.141</td> <td>   -0.108</td> <td>    0.759</td>\n","</tr>\n","<tr>\n","  <th>ma.L2</th>     <td>   -0.5555</td> <td>    0.173</td> <td>   -3.216</td> <td> 0.001</td> <td>   -0.894</td> <td>   -0.217</td>\n","</tr>\n","<tr>\n","  <th>ma.L3</th>     <td>   -0.3246</td> <td>    0.097</td> <td>   -3.330</td> <td> 0.001</td> <td>   -0.516</td> <td>   -0.134</td>\n","</tr>\n","<tr>\n","  <th>ma.S.L7</th>   <td>   -0.3359</td> <td>    0.119</td> <td>   -2.833</td> <td> 0.005</td> <td>   -0.568</td> <td>   -0.104</td>\n","</tr>\n","<tr>\n","  <th>sigma2</th>    <td> 1.049e+04</td> <td> 1512.571</td> <td>    6.936</td> <td> 0.000</td> <td> 7526.888</td> <td> 1.35e+04</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Ljung-Box (Q):</th>          <td>39.26</td> <th>  Jarque-Bera (JB):  </th> <td>5.57</td>\n","</tr>\n","<tr>\n","  <th>Prob(Q):</th>                <td>0.50</td>  <th>  Prob(JB):          </th> <td>0.06</td>\n","</tr>\n","<tr>\n","  <th>Heteroskedasticity (H):</th> <td>6.21</td>  <th>  Skew:              </th> <td>0.42</td>\n","</tr>\n","<tr>\n","  <th>Prob(H) (two-sided):</th>    <td>0.00</td>  <th>  Kurtosis:          </th> <td>3.83</td>\n","</tr>\n","</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."],"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                      SARIMAX Results                                      \n","===========================================================================================\n","Dep. Variable:                                   y   No. Observations:                  104\n","Model:             SARIMAX(2, 1, 3)x(0, 1, [1], 7)   Log Likelihood                -581.034\n","Date:                             Mon, 06 Jul 2020   AIC                           1178.067\n","Time:                                     04:09:34   BIC                           1198.582\n","Sample:                                          0   HQIC                          1186.360\n","                                             - 104                                         \n","Covariance Type:                               opg                                         \n","==============================================================================\n","                 coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","intercept      4.5636     10.880      0.419      0.675     -16.760      25.887\n","ar.L1          0.1502      0.198      0.759      0.448      -0.238       0.538\n","ar.L2          0.7730      0.156      4.945      0.000       0.467       1.079\n","ma.L1          0.3258      0.221      1.474      0.141      -0.108       0.759\n","ma.L2         -0.5555      0.173     -3.216      0.001      -0.894      -0.217\n","ma.L3         -0.3246      0.097     -3.330      0.001      -0.516      -0.134\n","ma.S.L7       -0.3359      0.119     -2.833      0.005      -0.568      -0.104\n","sigma2      1.049e+04   1512.571      6.936      0.000    7526.888    1.35e+04\n","===================================================================================\n","Ljung-Box (Q):                       39.26   Jarque-Bera (JB):                 5.57\n","Prob(Q):                              0.50   Prob(JB):                         0.06\n","Heteroskedasticity (H):               6.21   Skew:                             0.42\n","Prob(H) (two-sided):                  0.00   Kurtosis:                         3.83\n","===================================================================================\n","\n","Warnings:\n","[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n","\"\"\""]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"6OHnUq5HD05n","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008578153,"user_tz":180,"elapsed":688,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["start = len(train_set)\n","end = len(train_set) + len(test_set) - 1"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"c9ydDZ46D08A","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008580290,"user_tz":180,"elapsed":1637,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["model = SARIMAX(train_set['deaths'], order=(2, 1, 3),seasonal_order=(0, 1, 1, 7)).fit()"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"in1QoyKkD0-X","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":441},"executionInfo":{"status":"ok","timestamp":1594008581252,"user_tz":180,"elapsed":520,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"513581d8-41ff-4746-c0f1-c089dc8470aa"},"source":["model.summary()"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/html":["<table class=\"simpletable\">\n","<caption>SARIMAX Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>               <td>deaths</td>              <th>  No. Observations:  </th>    <td>90</td>   \n","</tr>\n","<tr>\n","  <th>Model:</th>           <td>SARIMAX(2, 1, 3)x(0, 1, [1], 7)</td> <th>  Log Likelihood     </th> <td>-495.278</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>                   <td>Mon, 06 Jul 2020</td>         <th>  AIC                </th> <td>1004.556</td>\n","</tr>\n","<tr>\n","  <th>Time:</th>                       <td>04:09:39</td>             <th>  BIC                </th> <td>1021.403</td>\n","</tr>\n","<tr>\n","  <th>Sample:</th>                    <td>03-17-2020</td>            <th>  HQIC               </th> <td>1011.320</td>\n","</tr>\n","<tr>\n","  <th></th>                          <td>- 06-14-2020</td>           <th>                     </th>     <td> </td>   \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>               <td>opg</td>               <th>                     </th>     <td> </td>   \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","     <td></td>        <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>ar.L1</th>   <td>    0.2012</td> <td>    0.179</td> <td>    1.123</td> <td> 0.261</td> <td>   -0.150</td> <td>    0.552</td>\n","</tr>\n","<tr>\n","  <th>ar.L2</th>   <td>    0.7652</td> <td>    0.169</td> <td>    4.528</td> <td> 0.000</td> <td>    0.434</td> <td>    1.096</td>\n","</tr>\n","<tr>\n","  <th>ma.L1</th>   <td>    0.3414</td> <td>    0.198</td> <td>    1.728</td> <td> 0.084</td> <td>   -0.046</td> <td>    0.729</td>\n","</tr>\n","<tr>\n","  <th>ma.L2</th>   <td>   -0.5473</td> <td>    0.152</td> <td>   -3.609</td> <td> 0.000</td> <td>   -0.845</td> <td>   -0.250</td>\n","</tr>\n","<tr>\n","  <th>ma.L3</th>   <td>   -0.3627</td> <td>    0.092</td> <td>   -3.940</td> <td> 0.000</td> <td>   -0.543</td> <td>   -0.182</td>\n","</tr>\n","<tr>\n","  <th>ma.S.L7</th> <td>   -0.3205</td> <td>    0.131</td> <td>   -2.443</td> <td> 0.015</td> <td>   -0.578</td> <td>   -0.063</td>\n","</tr>\n","<tr>\n","  <th>sigma2</th>  <td> 1.009e+04</td> <td> 1439.141</td> <td>    7.010</td> <td> 0.000</td> <td> 7268.197</td> <td> 1.29e+04</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Ljung-Box (Q):</th>          <td>43.67</td> <th>  Jarque-Bera (JB):  </th> <td>3.23</td>\n","</tr>\n","<tr>\n","  <th>Prob(Q):</th>                <td>0.32</td>  <th>  Prob(JB):          </th> <td>0.20</td>\n","</tr>\n","<tr>\n","  <th>Heteroskedasticity (H):</th> <td>20.25</td> <th>  Skew:              </th> <td>0.06</td>\n","</tr>\n","<tr>\n","  <th>Prob(H) (two-sided):</th>    <td>0.00</td>  <th>  Kurtosis:          </th> <td>3.96</td>\n","</tr>\n","</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."],"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                                      SARIMAX Results                                      \n","===========================================================================================\n","Dep. Variable:                              deaths   No. Observations:                   90\n","Model:             SARIMAX(2, 1, 3)x(0, 1, [1], 7)   Log Likelihood                -495.278\n","Date:                             Mon, 06 Jul 2020   AIC                           1004.556\n","Time:                                     04:09:39   BIC                           1021.403\n","Sample:                                 03-17-2020   HQIC                          1011.320\n","                                      - 06-14-2020                                         \n","Covariance Type:                               opg                                         \n","==============================================================================\n","                 coef    std err          z      P>|z|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","ar.L1          0.2012      0.179      1.123      0.261      -0.150       0.552\n","ar.L2          0.7652      0.169      4.528      0.000       0.434       1.096\n","ma.L1          0.3414      0.198      1.728      0.084      -0.046       0.729\n","ma.L2         -0.5473      0.152     -3.609      0.000      -0.845      -0.250\n","ma.L3         -0.3627      0.092     -3.940      0.000      -0.543      -0.182\n","ma.S.L7       -0.3205      0.131     -2.443      0.015      -0.578      -0.063\n","sigma2      1.009e+04   1439.141      7.010      0.000    7268.197    1.29e+04\n","===================================================================================\n","Ljung-Box (Q):                       43.67   Jarque-Bera (JB):                 3.23\n","Prob(Q):                              0.32   Prob(JB):                         0.20\n","Heteroskedasticity (H):              20.25   Skew:                             0.06\n","Prob(H) (two-sided):                  0.00   Kurtosis:                         3.96\n","===================================================================================\n","\n","Warnings:\n","[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n","\"\"\""]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"aovgAqNJD1A7","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008582572,"user_tz":180,"elapsed":692,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["predictions = model.predict(start,end,typ=\"levels\").rename(\"SARIMAX(2, 1, 3)x(0, 1, 1, 7)\")"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"9a1cCBaxD1ED","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":311},"executionInfo":{"status":"ok","timestamp":1594008584044,"user_tz":180,"elapsed":1040,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"0d4ec269-e769-42b7-a17d-82c634c5ec76"},"source":["test_set['deaths'].plot(label=\"test set\", legend=True)\n","train_set['deaths'].plot(legend=True, label=\"train set\")\n","predictions.plot(label=\"prediction\", legend=True)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fba78c1d1d0>"]},"metadata":{"tags":[]},"execution_count":22},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"lkU_xL7kD1Gj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":321},"executionInfo":{"status":"ok","timestamp":1594008587563,"user_tz":180,"elapsed":756,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"2c49b526-5cb1-4063-d7eb-3a16f01162f9"},"source":["test_set['deaths'].plot(label=\"test set\", legend=True)\n","predictions.plot(label=\"prediction\", legend=True)"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fba7bf084e0>"]},"metadata":{"tags":[]},"execution_count":23},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"z_0EEGOzIK4X","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594008589954,"user_tz":180,"elapsed":747,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"b19472d6-e849-4ad1-bbd7-49d75a657c04"},"source":["rmse(test_set['deaths'], predictions)"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["122.49375622108764"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"F9xcGMQwJQt_","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008600224,"user_tz":180,"elapsed":705,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["start = len(train_set)\n","end = len(train_set) + len(test_set) + 6"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"id":"GI_pAMTOJQxF","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008601533,"user_tz":180,"elapsed":722,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["predictions = model.predict(start,end,typ=\"levels\").rename(\"SARIMAX(2, 1, 3)x(0, 1, 1, 7)\")"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"VctvU1KBNLSO","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008602643,"user_tz":180,"elapsed":530,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["new_test = test_set.copy()"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"Z3Si6TLaJQzk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594008606433,"user_tz":180,"elapsed":472,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"9b97fc02-626a-429a-be51-0564e0e51b80"},"source":["len(predictions)"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"nJOu3FJUJQ15","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":407},"executionInfo":{"status":"ok","timestamp":1594008608815,"user_tz":180,"elapsed":825,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"db1a4056-cdf2-4b0c-d4e7-0e8fe46cfa5a"},"source":["predictions"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2020-06-15    44056.968063\n","2020-06-16    45337.891796\n","2020-06-17    46619.155811\n","2020-06-18    47927.410455\n","2020-06-19    48893.412292\n","2020-06-20    49820.102162\n","2020-06-21    50424.599847\n","2020-06-22    51157.949745\n","2020-06-23    52449.119616\n","2020-06-24    53747.950870\n","2020-06-25    55067.581385\n","2020-06-26    56049.315458\n","2020-06-27    56987.876425\n","2020-06-28    57606.801809\n","2020-06-29    58352.139240\n","2020-06-30    59656.761971\n","2020-07-01    60967.473684\n","2020-07-02    62299.789537\n","2020-07-03    63293.167675\n","2020-07-04    64243.779078\n","2020-07-05    64874.039863\n","Freq: D, Name: SARIMAX(2, 1, 3)x(0, 1, 1, 7), dtype: float64"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"Jg16vuOmIcDW","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008617470,"user_tz":180,"elapsed":733,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["brasil_covid = pd.read_csv(\"brasil_covid.csv\", index_col=1, parse_dates=True,dayfirst=True, sep=\";\")"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"f71aG15MIn38","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":227},"executionInfo":{"status":"ok","timestamp":1594008618656,"user_tz":180,"elapsed":684,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"07891438-885a-419e-a648-2514b2bd7c42"},"source":["brasil_covid.tail()"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>regiao</th>\n","      <th>obitosAcumulado</th>\n","    </tr>\n","    <tr>\n","      <th>data</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>Brasil</td>\n","      <td>60632</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-02</th>\n","      <td>Brasil</td>\n","      <td>61884</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-03</th>\n","      <td>Brasil</td>\n","      <td>63174</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-04</th>\n","      <td>Brasil</td>\n","      <td>64265</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-05</th>\n","      <td>Brasil</td>\n","      <td>64867</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            regiao  obitosAcumulado\n","data                               \n","2020-07-01  Brasil            60632\n","2020-07-02  Brasil            61884\n","2020-07-03  Brasil            63174\n","2020-07-04  Brasil            64265\n","2020-07-05  Brasil            64867"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"Iarq_im3Nk5g","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008620661,"user_tz":180,"elapsed":679,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["comparacao = brasil_covid[-21:]"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"gUtNK7MJNp4Q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":707},"executionInfo":{"status":"ok","timestamp":1594008621720,"user_tz":180,"elapsed":543,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"282876cd-7723-4cd6-d788-3fe26ad64c39"},"source":["comparacao"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>regiao</th>\n","      <th>obitosAcumulado</th>\n","    </tr>\n","    <tr>\n","      <th>data</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-06-15</th>\n","      <td>Brasil</td>\n","      <td>43959</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-16</th>\n","      <td>Brasil</td>\n","      <td>45241</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-17</th>\n","      <td>Brasil</td>\n","      <td>46510</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-18</th>\n","      <td>Brasil</td>\n","      <td>47748</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-19</th>\n","      <td>Brasil</td>\n","      <td>48954</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-20</th>\n","      <td>Brasil</td>\n","      <td>49976</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-21</th>\n","      <td>Brasil</td>\n","      <td>50617</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-22</th>\n","      <td>Brasil</td>\n","      <td>51271</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-23</th>\n","      <td>Brasil</td>\n","      <td>52645</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-24</th>\n","      <td>Brasil</td>\n","      <td>53830</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-25</th>\n","      <td>Brasil</td>\n","      <td>54971</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-26</th>\n","      <td>Brasil</td>\n","      <td>55961</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-27</th>\n","      <td>Brasil</td>\n","      <td>57070</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-28</th>\n","      <td>Brasil</td>\n","      <td>57622</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-29</th>\n","      <td>Brasil</td>\n","      <td>58314</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-30</th>\n","      <td>Brasil</td>\n","      <td>59594</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>Brasil</td>\n","      <td>60632</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-02</th>\n","      <td>Brasil</td>\n","      <td>61884</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-03</th>\n","      <td>Brasil</td>\n","      <td>63174</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-04</th>\n","      <td>Brasil</td>\n","      <td>64265</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-05</th>\n","      <td>Brasil</td>\n","      <td>64867</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            regiao  obitosAcumulado\n","data                               \n","2020-06-15  Brasil            43959\n","2020-06-16  Brasil            45241\n","2020-06-17  Brasil            46510\n","2020-06-18  Brasil            47748\n","2020-06-19  Brasil            48954\n","2020-06-20  Brasil            49976\n","2020-06-21  Brasil            50617\n","2020-06-22  Brasil            51271\n","2020-06-23  Brasil            52645\n","2020-06-24  Brasil            53830\n","2020-06-25  Brasil            54971\n","2020-06-26  Brasil            55961\n","2020-06-27  Brasil            57070\n","2020-06-28  Brasil            57622\n","2020-06-29  Brasil            58314\n","2020-06-30  Brasil            59594\n","2020-07-01  Brasil            60632\n","2020-07-02  Brasil            61884\n","2020-07-03  Brasil            63174\n","2020-07-04  Brasil            64265\n","2020-07-05  Brasil            64867"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"YtyvFvQWIppV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":378},"executionInfo":{"status":"ok","timestamp":1594008623953,"user_tz":180,"elapsed":886,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"ce7c1321-0c61-45ca-8c91-cbf859833c84"},"source":["plt.figure(figsize=(8,5))\n","train_set['deaths'].plot(legend=True, label=\"Dataset de Treino\")\n","comparacao[\"obitosAcumulado\"].plot(legend=True, label=\"Dataset de Test\")\n","predictions.plot(legend=True, label=\"Predictions\")\n","plt.title(\"Predictions\")\n","plt.ylabel(\"Mortes\")\n","plt.xlabel(\"Data\")"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Data')"]},"metadata":{"tags":[]},"execution_count":35},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"NHVR-DzyK3rF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":391},"executionInfo":{"status":"ok","timestamp":1594008628775,"user_tz":180,"elapsed":870,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"a4be9fc0-d2c7-4f9c-e4ad-ad1459dbc4d1"},"source":["plt.figure(figsize=(8,5))\n","comparacao[\"obitosAcumulado\"].plot(legend=True, label=\"Dataset de Test\")\n","predictions.plot(legend=True, label=\"Predictions\")\n","plt.title(\"Predictions\")\n","plt.ylabel(\"Mortes\")\n","plt.xlabel(\"Data\")"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Data')"]},"metadata":{"tags":[]},"execution_count":36},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"yinNn7Z1OIPF","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008632317,"user_tz":180,"elapsed":736,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["dataframe = pd.DataFrame({\"predictions\": predictions.values,\n","                          \"mortes\":comparacao['obitosAcumulado']})"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"2HMnbNrtON91","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008634047,"user_tz":180,"elapsed":674,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["dataframe['predictions'] = dataframe['predictions'].astype(int)"],"execution_count":38,"outputs":[]},{"cell_type":"code","metadata":{"id":"8qnrPMPpQhRh","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1594008635149,"user_tz":180,"elapsed":562,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}}},"source":["dataframe['diferença'] = dataframe['predictions'] - dataframe['mortes']"],"execution_count":39,"outputs":[]},{"cell_type":"code","metadata":{"id":"4zNu1PXwQz_3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":707},"executionInfo":{"status":"ok","timestamp":1594008636744,"user_tz":180,"elapsed":713,"user":{"displayName":"Leopoldo Zanellato","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg3y650d5hzEoZHlNhhBnXHeBbx7OuDI3Fn9FRtfg=s64","userId":"15382649261081384936"}},"outputId":"b73cec47-59fc-4e8d-8d59-c9ef6c265ce2"},"source":["dataframe"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predictions</th>\n","      <th>mortes</th>\n","      <th>diferença</th>\n","    </tr>\n","    <tr>\n","      <th>data</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-06-15</th>\n","      <td>44056</td>\n","      <td>43959</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-16</th>\n","      <td>45337</td>\n","      <td>45241</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-17</th>\n","      <td>46619</td>\n","      <td>46510</td>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-18</th>\n","      <td>47927</td>\n","      <td>47748</td>\n","      <td>179</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-19</th>\n","      <td>48893</td>\n","      <td>48954</td>\n","      <td>-61</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-20</th>\n","      <td>49820</td>\n","      <td>49976</td>\n","      <td>-156</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-21</th>\n","      <td>50424</td>\n","      <td>50617</td>\n","      <td>-193</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-22</th>\n","      <td>51157</td>\n","      <td>51271</td>\n","      <td>-114</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-23</th>\n","      <td>52449</td>\n","      <td>52645</td>\n","      <td>-196</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-24</th>\n","      <td>53747</td>\n","      <td>53830</td>\n","      <td>-83</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-25</th>\n","      <td>55067</td>\n","      <td>54971</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-26</th>\n","      <td>56049</td>\n","      <td>55961</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-27</th>\n","      <td>56987</td>\n","      <td>57070</td>\n","      <td>-83</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-28</th>\n","      <td>57606</td>\n","      <td>57622</td>\n","      <td>-16</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-29</th>\n","      <td>58352</td>\n","      <td>58314</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>2020-06-30</th>\n","      <td>59656</td>\n","      <td>59594</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>60967</td>\n","      <td>60632</td>\n","      <td>335</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-02</th>\n","      <td>62299</td>\n","      <td>61884</td>\n","      <td>415</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-03</th>\n","      <td>63293</td>\n","      <td>63174</td>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-04</th>\n","      <td>64243</td>\n","      <td>64265</td>\n","      <td>-22</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-05</th>\n","      <td>64874</td>\n","      <td>64867</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            predictions  mortes  diferença\n","data                                      \n","2020-06-15        44056   43959         97\n","2020-06-16        45337   45241         96\n","2020-06-17        46619   46510        109\n","2020-06-18        47927   47748        179\n","2020-06-19        48893   48954        -61\n","2020-06-20        49820   49976       -156\n","2020-06-21        50424   50617       -193\n","2020-06-22        51157   51271       -114\n","2020-06-23        52449   52645       -196\n","2020-06-24        53747   53830        -83\n","2020-06-25        55067   54971         96\n","2020-06-26        56049   55961         88\n","2020-06-27        56987   57070        -83\n","2020-06-28        57606   57622        -16\n","2020-06-29        58352   58314         38\n","2020-06-30        59656   59594         62\n","2020-07-01        60967   60632        335\n","2020-07-02        62299   61884        415\n","2020-07-03        63293   63174        119\n","2020-07-04        64243   64265        -22\n","2020-07-05        64874   64867          7"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"id":"kNIWfOMaQ-WK","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}